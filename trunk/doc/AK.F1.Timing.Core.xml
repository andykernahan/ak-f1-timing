<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>AK.F1.Timing.Core</name>
  </assembly>
  <members>
    <member name="T:AK.F1.Timing.F1Timing">
      <summary>
            Provides a simple interface to the entire <see cref="N:AK.F1.Timing" /> library. This class is
            <see langword="static" />.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.F1Timing.Live">
      <summary>
            Provides methods for creating <see cref="T:AK.F1.Timing.Messaging.IMessageReader" />s which
            read from the live message stream.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.F1Timing.Live.Read(System.String,System.String)">
      <summary>
            Creates a live message reader using the specified credentials.
            </summary>
      <param name="username">The user's F1 live timing username.</param>
      <param name="password">The user's F1 live timing password.</param>
      <returns>A message reader which reads live messages.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="username" /> or <paramref name="password" /> is 
            <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="username" /> or <paramref name="password" /> is empty.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when an IO error whilst connecting to the live messages stream.
            </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
            Thrown when the supplied credentials were rejected by the live timing site.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.F1Timing.Live.ReadAndRecord(System.String,System.String,System.String)">
      <summary>
            Creates a live message reader using the specified credentials and records the
            messages to the specified <paramref name="path" />.
            </summary>
      <param name="username">The user's F1 live timing username.</param>
      <param name="password">The user's F1 live timing password.</param>
      <param name="path">The path to save the messages to.</param>
      <returns>A message reader which reads and records live messages.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="username" /> or <paramref name="password" /> or
            <paramref name="path" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="username" /> or <paramref name="password" /> or
            <paramref name="path" /> is empty.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when an IO error occurs whilst creating the output file or connecting to the live
            messages stream.
            </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
            Thrown when the supplied credentials were rejected by the live timing site.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.F1Timing.Playback">
      <summary>
            Provides methods for creating <see cref="T:AK.F1.Timing.Messaging.Playback.IRecordedMessageReader" />s
            which read from persisted live message streams.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.F1Timing.Playback.Read(System.String)">
      <summary>
            Creates a playback reader which reads the messages persisted in the specified file <paramref name="path" />.
            </summary>
      <param name="path">The path of the recorded message stream.</param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:AK.F1.Timing.F1Timing.Playback.Read(System.String)"]</p>
      </returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="path" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.IO.FileNotFoundException">
            Thrown when <paramref name="path" /> does not exist.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when an IO error occurs whilst opening the specified <paramref name="path" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Extensions.EventExtensions">
      <summary>
            Provides utility methods for safely raising events. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Extensions.EventExtensions.Raise(System.EventHandler,System.Object)">
      <summary>
            Raises the specified <see cref="T:System.EventHandler" /> if there are any subsribers.
            </summary>
      <param name="event">The event to raise.</param>
      <param name="sender">The object raising the event.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sender" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.EventExtensions.Raise``1(System.EventHandler{``0},System.Object,``0)">
      <summary>
            Raises the specified <see cref="T:System.EventHandler`1" />, if there are any subsribers.
            </summary>
      <param name="event">The event to raise.</param>
      <param name="sender">The object raising the event.</param>
      <param name="e">The event arguments.</param>
      <typeparam name="T">The <see cref="T:System.EventArgs" /><see cref="T:System.Type" /></typeparam>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sender" /> or <paramref name="e" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.EventExtensions.RaiseAsync(System.EventHandler,System.Object)">
      <summary>
            Asynchronously raises the specified <see cref="T:System.EventHandler" /> if there are any
            subsribers.
            </summary>
      <param name="event">The event to raise.</param>
      <param name="sender">The object raising the event.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sender" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.EventExtensions.RaiseAsync``1(System.EventHandler{``0},System.Object,``0)">
      <summary>
            Asynchronously raises the specified <see cref="T:System.EventHandler`1" />, if there
            are any subsribers.
            </summary>
      <param name="event">The event to raise.</param>
      <param name="sender">The object raising the event.</param>
      <param name="e">The event arguments.</param>
      <typeparam name="T">The <see cref="T:System.EventArgs" /><see cref="T:System.Type" /></typeparam>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sender" /> or <paramref name="e" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Extensions.ExceptionExtensions">
      <summary>
        <see cref="T:System.Exception" /> extension class. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Extensions.ExceptionExtensions.IsFatal(System.Exception)">
      <summary>
            Returns a value indicating if the specified <see cref="T:System.Exception" /> is classed
            as fatal.
            </summary>
      <param name="exc">The exception.</param>
      <returns>
        <see langword="true" /> if the specified exception is fatal,
            otherwise; <see langword="false" />.</returns>
    </member>
    <member name="T:AK.F1.Timing.Extensions.HttpMethod">
      <summary>
            Defines the most basic of HTTP method.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Extensions.HttpMethod.Get">
      <summary>
            The HTTP GET method.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Extensions.HttpMethod.Post">
      <summary>
            The HTTP POST method.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Extensions.ReflectionExtensions">
      <summary>
            Provides reflection related extension. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Extensions.ReflectionExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider)">
      <summary>
            Returns the first attribute of type <typeparamref name="T" /> using the specified
            <paramref name="provider" />.
            </summary>
      <param name="provider">The custom type provider.</param>
      <typeparam name="T">The type of attribute to locate.</typeparam>
      <returns>The first attribute of type <typeparamref name="T" /> if one exists, otherwise;
            <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="provider" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.ReflectionExtensions.GetAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <summary>
            Returns the first attribute of type <typeparamref name="T" /> using the specified
            <paramref name="provider" />.
            </summary>
      <param name="provider">The custom type provider.</param>
      <param name="inherit">
        <see langword="true" /> search the hierarchy chain for the inherited
            custom attribute, otherwise; <see langword="false" />.</param>
      <typeparam name="T">The type of attribute to locate.</typeparam>
      <returns>The first attribute of type <typeparamref name="T" /> if one exists, otherwise;
            <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="provider" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.ReflectionExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider)">
      <summary>
            Returns all attributes of type <typeparamref name="T" /> using the specified
            <paramref name="provider" />.
            </summary>
      <param name="provider">The custom type provider.</param>
      <typeparam name="T">The type of attribute to locate.</typeparam>
      <returns>All attributes of type <typeparamref name="T" />, or an empty array of type
            <typeparamref name="T" /> if non exist.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="provider" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.ReflectionExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <summary>
            Returns all attributes of type <typeparamref name="T" /> using the specified
            <paramref name="provider" />.
            </summary>
      <param name="provider">The custom type provider.</param>
      <param name="inherit">
        <see langword="true" /> search the hierarchy chain for the inherited
            custom attribute, otherwise; <see langword="false" />.</param>
      <typeparam name="T">The type of attribute to locate.</typeparam>
      <returns>All attributes of type <typeparamref name="T" />, or an empty array of type
            <typeparamref name="T" /> if non exist.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="provider" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.ReflectionExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider)">
      <summary>
            Returns a value indicating if the specified <paramref name="provider" /> provides one
            or more attributes of type <typeparamref name="T" />.
            </summary>
      <param name="provider">The custom type provider.</param>
      <typeparam name="T">The type of attribute to locate.</typeparam>
      <returns>
        <see langword="true" /> if the an attribute of type <typeparamref name="T" />
            exists, otherwise; <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="provider" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.ReflectionExtensions.HasAttribute``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
      <summary>
            Returns a value indicating if the specified <paramref name="provider" /> provides one
            or more attributes of type <typeparamref name="T" />.
            </summary>
      <param name="provider">The custom type provider.</param>
      <param name="inherit">
        <see langword="true" /> search the hierarchy chain for the inherited
            custom attribute, otherwise; <see langword="false" />.</param>
      <typeparam name="T">The type of attribute to locate.</typeparam>
      <returns>
        <see langword="true" /> if the an attribute of type <typeparamref name="T" />
            exists, otherwise; <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="provider" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Extensions.StreamExtensions">
      <summary>
        <see cref="T:System.IO.Stream" /> extension class. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Extensions.StreamExtensions.FullyRead(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a sequences of bytes the stream and advances the position within the stream by
            the number read. If the end of the stream is reached before <paramref name="count" />
            bytes are read, this method will return <see langword="false" />, otherwise it will
            return <see langword="true" /> which indicates that exactly <paramref name="count" /> bytes
            have been written to the specified <paramref name="buffer" />.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="buffer">The buffer into which the read data is written.</param>
      <param name="offset">The offset in <paramref name="buffer" /> at which writing begins.</param>
      <param name="count">The exact number of bytes to read.</param>
      <returns>
        <see langword="true" /> if the specified number of bytes were read into
            <paramref name="buffer" />, otherwise; <see langword="false" /> to indicate that the end
            of the stream was reached.</returns>
    </member>
    <member name="M:AK.F1.Timing.Extensions.StreamExtensions.IsEof(System.IO.Stream)">
      <summary>
            Returns a value indicating if the specified stream is at the end of its input.
            </summary>
      <param name="stream">The stream to test.</param>
      <returns>
        <see langword="true" /> if the specified stream is and the end of its
            input, otherwise; <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="stream" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Extensions.StringExtensions">
      <summary>
        <see cref="T:System.String" /> extension class. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Extensions.StringExtensions.OrdinalEndsWith(System.String,System.String)">
      <summary>
            Returns a value indicating if <paramref name="x" /> ends with <paramref name="y" />. The
            comparison is made using ordinal sorting rules.
            </summary>
      <param name="x">The string to compare to <paramref name="y" />.</param>
      <param name="y">The string to compare to <paramref name="x" />.</param>
      <returns>
        <see langword="true" /> if the <paramref name="x" /> ends with <paramref name="y" />,
            otherwise; <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="x" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.StringExtensions.OrdinalEquals(System.String,System.String)">
      <summary>
            Returns a value indicating equality with the other instance. The comparison is made
            using ordinal sorting rules.
            </summary>
      <param name="x">The string to compare to <paramref name="y" />.</param>
      <param name="y">The string to compare to <paramref name="x" />.</param>
      <returns>
        <see langword="true" /> if the strings are equal, otherwise;
            <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="x" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Extensions.UriExtensions">
      <summary>
        <see cref="T:System.Uri" /> extension class. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Extensions.UriExtensions.GetResponseCookies(System.Uri,AK.F1.Timing.Extensions.HttpMethod)">
      <summary>
            Gets the cookies that were set whilst requesting the specified resource.
            </summary>
      <param name="uri">The resource location.</param>
      <param name="method">The method to use when requesting the resource.</param>
      <returns>The collection of cookies set.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="uri" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="method" /> is not a valid enumeration member.
            </exception>
      <exception cref="T:System.IO.IOException">
            An IO exception occurred whilst fetching the cookies.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.UriExtensions.GetResponseCookies(System.Uri,AK.F1.Timing.Extensions.HttpMethod,System.Action{System.Net.HttpWebRequest})">
      <summary>
            Gets the cookies that were set whilst requesting the specified resource.
            </summary>
      <param name="uri">The resource location.</param>
      <param name="method">The method to use when requesting the resource.</param>
      <param name="configurator">The request configurator.</param>
      <returns>The collection of cookies set.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="uri" /> or <paramref name="configurator" /> is
            <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="method" /> is not a valid enumeration member.
            </exception>
      <exception cref="T:System.IO.IOException">
            An IO exception occurred whilst fetching the cookies.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.UriExtensions.GetResponseStream(System.Uri,AK.F1.Timing.Extensions.HttpMethod)">
      <summary>
            Gets response stream for the specified resource.
            </summary>
      <param name="uri">The resource location.</param>
      <param name="method">The method to use when requesting the resource.</param>
      <returns>The response stream.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="uri" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="method" /> is not a valid enumeration member.
            </exception>
      <exception cref="T:System.IO.IOException">
            An IO exception occurred whilst fetching the response stream.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.UriExtensions.GetResponseStream(System.Uri,AK.F1.Timing.Extensions.HttpMethod,System.Action{System.Net.HttpWebRequest})">
      <summary>
            Gets response stream for the specified resource.
            </summary>
      <param name="uri">The resource location.</param>
      <param name="method">The method to use when requesting the resource.</param>
      <param name="configurator">The request configurator.</param>
      <returns>The response stream.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="uri" /> or <paramref name="configurator" /> is
            <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="method" /> is not a valid enumeration member.
            </exception>
      <exception cref="T:System.IO.IOException">
            An IO exception occurred whilst fetching the response stream.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.UriExtensions.GetResponseString(System.Uri,AK.F1.Timing.Extensions.HttpMethod)">
      <summary>
            Gets response string for the specified resource.
            </summary>
      <param name="uri">The resource location.</param>
      <param name="method">The method to use when requesting the resource.</param>
      <returns>The response string.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="uri" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="method" /> is not a valid enumeration member.
            </exception>
      <exception cref="T:System.IO.IOException">
            An IO exception occurred whilst fetching the response string.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Extensions.UriExtensions.GetResponseString(System.Uri,AK.F1.Timing.Extensions.HttpMethod,System.Action{System.Net.HttpWebRequest})">
      <summary>
            Gets response string for the specified resource.
            </summary>
      <param name="uri">The resource location.</param>
      <param name="method">The method to use when requesting the resource.</param>
      <param name="configurator">The request configurator.</param>
      <returns>The response string.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="uri" /> or <paramref name="configurator" /> is
            <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="method" /> is not a valid enumeration member.
            </exception>
      <exception cref="T:System.IO.IOException">
            An IO exception occurred whilst fetching the response string.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.CompositeMessage">
      <summary>
            Defines a <see cref="T:AK.F1.Timing.Messaging.Message" /> which is composed of one or more
            <see cref="T:AK.F1.Timing.Messaging.Message" />s. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.CompositeMessage.#ctor(AK.F1.Timing.Messaging.Message[])">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.CompositeMessage" /> class and specifies
            the composite messages.
            </summary>
      <param name="messages">The messages.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="messages" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="messages" /> is empty.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.CompositeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.CompositeMessage.Messages">
      <summary>
            Gets the collection of <see cref="T:AK.F1.Timing.Messaging.Message" />s contained by this
            composite message.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.CompositeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.IMessageProcessor">
      <summary>
            Defines <see cref="T:AK.F1.Timing.Messaging.Message" /> processor.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageProcessor.Process(AK.F1.Timing.Messaging.Message)">
      <summary>
            Processes the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to process.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.IMessageReader">
      <summary>
            Allows <see cref="T:AK.F1.Timing.Messaging.Message" />s to be read from an underlying data
            stream.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageReader.Read">
      <summary>
            Reads the next <see cref="T:AK.F1.Timing.Messaging.Message" /> from the underlying data
            stream.
            </summary>
      <returns>The next <see cref="T:AK.F1.Timing.Messaging.Message" />, or <see langword="null" />
            if the last message has been read.</returns>
      <exception cref="T:System.ObjectDisposedException">
            Thrown when the reader has been disposed of.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when an IO error occurs reading the next message from the stream.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when the format of the next message of the stream is invalid or the message
            itself is not recognised.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.IMessageVisitor">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:AK.F1.Timing.Messaging.IMessageVisitor"]</p>
      </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.ClearGridRowMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.IMessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Message">
      <summary>
            Defines the base class for live timing messages. This class is <see langword="abstract" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Message.#ctor">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Message" /> class.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Message.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Message.Empty">
      <summary>
            Defines an empty message. This field is <see langword="readonly" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Message.Repr(System.String,System.Object[])">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this instance using the
            specified format <see cref="T:System.String" /> and format arguments.
            </summary>
      <param name="format">The format.</param>
      <param name="args">The format arguments.</param>
      <returns>A <see cref="T:System.String" /> representation of this instance using the
            specified format <see cref="T:System.String" /> and format arguments.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="format" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.FormatException">
            Thrown when the format of <paramref name="format" /> is invalid.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="format" /> references an argument not contained within
            <paramref name="args" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.MessageReaderBase">
      <summary>
            Defines a useful base class for <see cref="T:AK.F1.Timing.Messaging.IMessageReader" />
            implementations. This class is <see langword="abstract" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageReaderBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:AK.F1.Timing.Messaging.MessageReaderBase" /> class</summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.MessageReaderBase.Log">
      <summary>
            Gets the <see cref="T:log4net.ILog" /> for this type.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageReaderBase.Read">
      <summary>
            Reads the next <see cref="T:AK.F1.Timing.Messaging.Message" /> from the underlying data
            stream.
            </summary>
      <returns>The next <see cref="T:AK.F1.Timing.Messaging.Message" />, or <see langword="null" />
            if the last message has been read.</returns>
      <exception cref="T:System.ObjectDisposedException">
            Thrown when the reader has been disposed of.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when an IO error occurs reading the next message from the stream.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when the format of the next message of the stream is invalid or the message
            itself is not recognised.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.MessageReaderBase.ReadException">
      <summary>
            Gets or sets the last exception thrown in the read method. Further calls to read will
            result in this exception being rethrown (after the disposed state of this instance is
            checked).
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageReaderBase.ReadImpl">
      <summary>
            When overriden in a derived class; reads the next <see cref="T:AK.F1.Timing.Messaging.Message" />
            from the underlying data stream.
            </summary>
      <returns>The next <see cref="T:AK.F1.Timing.Messaging.Message" />.</returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.MessageVisitor">
      <summary>
            Defines a base class for <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" /> implementations.
            This class is <see langword="abstract" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:AK.F1.Timing.Messaging.MessageVisitor" /> class</summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.MessageVisitor.Null">
      <summary>
            Defines a null message visitor. This field is <see langword="readonly" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.ClearGridRowMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.MessageVisitor.Visit(AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.LiveMessageReader">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:AK.F1.Timing.Messaging.Live.LiveMessageReader"]</p>
      </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.LiveMessageReader.#ctor(AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint,AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory)">
      <summary>Initializes a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.LiveMessageReader" /> class</summary>
      <param name="messageStreamEndpoint">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="messageStreamEndpoint"/&gt; documentation for "M:AK.F1.Timing.Messaging.Live.LiveMessageReader.#ctor(AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint,AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory)"]</p>
      </param>
      <param name="decryptorFactory">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="decryptorFactory"/&gt; documentation for "M:AK.F1.Timing.Messaging.Live.LiveMessageReader.#ctor(AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint,AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory)"]</p>
      </param>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.LiveMessageTranslator">
      <summary>
            Translates the messages read from a <see cref="T:AK.F1.Timing.Messaging.Live.LiveMessageReader" /> into more meaningful
            messages. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.LiveMessageTranslator.#ctor">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.LiveMessageTranslator" /> class.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.LiveMessageTranslator.Reset">
      <summary>
            Resets all state information associated with this translator.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.LiveMessageTranslator.Translate(AK.F1.Timing.Messaging.Message)">
      <summary>
            Attempts to translate the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to translate.</param>
      <returns>The translated message if possible, otherwise; <see langword="null" />.</returns>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.LiveMessageTranslator.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.LiveMessageTranslator.Visit(AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.LiveMessageTranslator.Visit(AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage)">
      <summary>
            Visits the specified <paramref name="message" />.
            </summary>
      <param name="message">The message to visit.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase">
      <summary>
            Defines a base class for <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory" />
            implementations which provides seed caching capabilities. This class is
            <see langword="abstract" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.#ctor">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase" /> class.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.Create">
      <summary>
            Creates a new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.
            </summary>
      <returns>A new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.</returns>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.Create(System.String)">
      <summary>
            Creates a new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.
            </summary>
      <param name="sessionId">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="sessionId"/&gt; documentation for "M:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.Create(System.String)"]</p>
      </param>
      <returns>A new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sessionId" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sessionId" /> is empty.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.CreateWithSeed(System.Int32)">
      <summary>
            When overriden in a derived class; creates a new
            <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" /> using the specified
            <paramref name="seed" />.
            </summary>
      <param name="seed">The decryption seed.</param>
      <returns>A new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" /> using the specified
            <paramref name="seed" />.</returns>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.DefaultSeed">
      <summary>
            Defines the default seed. This field is constant.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.GetSeedForSession(System.String)">
      <summary>
            When overriden in a derived class, gets the decryption seed for the this with
            the specified identifier.
            </summary>
      <param name="sessionId">The identifier of the this to return the decryption seed
            for.</param>
      <returns>The decryption seed for the this with the specified identifier.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sessionId" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sessionId" /> is empty.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Live.Encryption.DecryptorFactoryBase.Log">
      <summary>
            Gets the <see cref="T:log4net.ILog" /> for this type.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor">
      <summary>
            Defines a decryptor.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor.Decrypt(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Decrypts the specified buffer in place.
            </summary>
      <param name="buffer">The buffer from which the encrypted data is read and the decrypted
            data is written.</param>
      <param name="offset">The offset in <paramref name="buffer" /> at which decryption
            begins.</param>
      <param name="count">The exact number of bytes to decrypt.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="buffer" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor.Reset">
      <summary>
            Resets the state of the decryptor.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory">
      <summary>
            Defines the means of creating <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />
            instances.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory.Create">
      <summary>
            Creates a new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.
            </summary>
      <returns>A new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.</returns>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory.Create(System.String)">
      <summary>
            Creates a new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.
            </summary>
      <param name="sessionId">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="sessionId"/&gt; documentation for "M:AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory.Create(System.String)"]</p>
      </param>
      <returns>A new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sessionId" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sessionId" /> is empty.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptor">
      <summary>
            An <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" /> implementation which implements
            the 2009 decryption algorithm. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptor.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptor" /> class and specifies the
            initial hash <paramref name="seed" /></summary>
      <param name="seed">The initial hash seed.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptor.Decrypt(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Decrypts the specified buffer in place.
            </summary>
      <param name="buffer">The buffer from which the encrypted data is read and the decrypted
            data is written.</param>
      <param name="offset">The offset in <paramref name="buffer" /> at which decryption
            begins.</param>
      <param name="count">The exact number of bytes to decrypt.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="buffer" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptor.Reset">
      <summary>
            Resets the state of the decryptor.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptorFactory">
      <summary>
            An <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory" /> implementation which
            creates decryptors seeded using a user's credentials for the F1 live timing site. This
            class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptorFactory.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptorFactory" /> class</summary>
      <param name="username">A user's F1 live timing username.</param>
      <param name="password">The user's F1 live timing password.</param>
      <returns>
      </returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="username" /> or <paramref name="password" /> is 
            <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="username" /> or <paramref name="password" /> is empty.
            </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
            Thrown when the supplied credentials have been rejected by the live timing site.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptorFactory.CreateWithSeed(System.Int32)">
      <summary>
            When overriden in a derived class; creates a new
            <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" /> using the specified
            <paramref name="seed" />.
            </summary>
      <param name="seed">The decryption seed.</param>
      <returns>A new <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptor" /> using the specified
            <paramref name="seed" />.</returns>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Encryption.LiveDecryptorFactory.GetSeedForSession(System.String)">
      <summary>
            When overriden in a derived class, gets the decryption seed for the this with
            the specified identifier.
            </summary>
      <param name="sessionId">The identifier of the this to return the decryption seed
            for.</param>
      <returns>The decryption seed for the this with the specified identifier.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sessionId" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sessionId" /> is empty.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream">
      <summary>
            Defines a simple intput stream.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.IMessageStream.FullyRead(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a sequences of bytes the stream and advances the position within the stream by
            the number read. If the end of the stream is reached before <paramref name="count" />
            bytes are read, this method will return <see langword="false" />, otherwise it will
            return <see langword="true" /> which indicates that exactly <paramref name="count" /> bytes
            have been written to the specified <paramref name="buffer" />.
            </summary>
      <param name="buffer">The buffer into which the read data is written.</param>
      <param name="offset">The offset in <paramref name="buffer" /> at which writing begins.</param>
      <param name="count">The exact number of bytes to read.</param>
      <returns>
        <see langword="true" /> if the specified number of bytes were read into
            <paramref name="buffer" />, otherwise; <see langword="false" /> to indicate that the end
            of the stream was reached.</returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Live.IO.IMessageStream.PingInterval">
      <summary>
            Gets or sets the stream ping interval.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="value" /> is negative.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint">
      <summary>
            Defines the means of opening message
            <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" />s.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint.Open">
      <summary>
            Opens a new message <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" />.
            </summary>
      <returns>An opened message <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="keyframe" /> is negative.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when the message stream could not be opened.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint.OpenKeyframe(System.Int32)">
      <summary>
            Opens a new keyframe <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" /> for
            the keyframe with the specified <paramref name="keyframe" /> number.
            </summary>
      <param name="keyframe">The keyframe number.</param>
      <returns>A new keyframe <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" /> for
            the keyframe with the specified <paramref name="keyframe" /> number.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="keyframe" /> is negative.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when the keyframe stream could not be opened.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.IO.LiveMessageStreamEndpoint">
      <summary>
            An <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint" /> implementation that
            opens message streams provided by the F1 live timing server. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.LiveMessageStreamEndpoint.#ctor">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.IO.LiveMessageStreamEndpoint" /> class.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.LiveMessageStreamEndpoint.Open">
      <summary>
            Opens a new message <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" />.
            </summary>
      <returns>An opened message <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="keyframe" /> is negative.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when the message stream could not be opened.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.LiveMessageStreamEndpoint.OpenKeyframe(System.Int32)">
      <summary>
            Opens a new keyframe <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" /> for
            the keyframe with the specified <paramref name="keyframe" /> number.
            </summary>
      <param name="keyframe">The keyframe number.</param>
      <returns>A new keyframe <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" /> for
            the keyframe with the specified <paramref name="keyframe" /> number.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="keyframe" /> is negative.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when the keyframe stream could not be opened.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.IO.LiveSocketMessageStream">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:AK.F1.Timing.Messaging.Live.IO.LiveSocketMessageStream"]</p>
      </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.LiveSocketMessageStream.#ctor(System.Net.Sockets.Socket)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.IO.LiveSocketMessageStream" /> class.
            </summary>
      <param name="socket">The stream socket.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="socket" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.LiveSocketMessageStream.FullyRead(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a sequences of bytes the stream and advances the position within the stream by
            the number read. If the end of the stream is reached before <paramref name="count" />
            bytes are read, this method will return <see langword="false" />, otherwise it will
            return <see langword="true" /> which indicates that exactly <paramref name="count" /> bytes
            have been written to the specified <paramref name="buffer" />.
            </summary>
      <param name="buffer">The buffer into which the read data is written.</param>
      <param name="offset">The offset in <paramref name="buffer" /> at which writing begins.</param>
      <param name="count">The exact number of bytes to read.</param>
      <returns>
        <see langword="true" /> if the specified number of bytes were read into
            <paramref name="buffer" />, otherwise; <see langword="false" /> to indicate that the end
            of the stream was reached.</returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Live.IO.LiveSocketMessageStream.PingInterval">
      <summary>
            Gets or sets the stream ping interval.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="value" /> is negative.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.IO.MessageStreamDelegate">
      <summary>
            A <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" /> implementation which
            delegates to an underlying <see cref="T:System.IO.Stream" />. This implementation does
            not support pinging. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.MessageStreamDelegate.#ctor(System.IO.Stream)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.IO.MessageStreamDelegate" /> class.
            </summary>
      <param name="inner">The inner message stream.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="inner" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.IO.MessageStreamDelegate.FullyRead(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a sequences of bytes the stream and advances the position within the stream by
            the number read. If the end of the stream is reached before <paramref name="count" />
            bytes are read, this method will return <see langword="false" />, otherwise it will
            return <see langword="true" /> which indicates that exactly <paramref name="count" /> bytes
            have been written to the specified <paramref name="buffer" />.
            </summary>
      <param name="buffer">The buffer into which the read data is written.</param>
      <param name="offset">The offset in <paramref name="buffer" /> at which writing begins.</param>
      <param name="count">The exact number of bytes to read.</param>
      <returns>
        <see langword="true" /> if the specified number of bytes were read into
            <paramref name="buffer" />, otherwise; <see langword="false" /> to indicate that the end
            of the stream was reached.</returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Live.IO.MessageStreamDelegate.PingInterval">
      <summary>
            Gets or sets the stream ping interval.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="value" /> is negative.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.Recording.RecordedDecryptorFactory">
      <summary>
            An <see cref="T:AK.F1.Timing.Messaging.Live.Encryption.IDecryptorFactory" /> implementation
            that creates decryptors with seeds that have been persisted on the file system. This
            class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Recording.RecordedDecryptorFactory.#ctor(System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.Recording.RecordedDecryptorFactory" /> class and
            specifies the directory which contains the persisted seeds.
            </summary>
      <param name="directory">The directory which contains the persisted seeds.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="directory" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
            Thrown when <paramref name="directory" /> does not exist.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Live.Recording.RecordedMessageStreamEndpoint">
      <summary>
            An <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStreamEndpoint" /> implementation that
            opens messages streams that have been persisted on the file system. This class cannot be
            inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Recording.RecordedMessageStreamEndpoint.#ctor(System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Live.Recording.RecordedMessageStreamEndpoint" /> class and
            specifies the directory which contains the persisted message streams.
            </summary>
      <param name="directory">The directory which contains the persisted message streams.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="directory" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
            Thrown when <paramref name="directory" /> does not exist.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Recording.RecordedMessageStreamEndpoint.Open">
      <summary>
            Opens a new message <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" />.
            </summary>
      <returns>An opened message <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="keyframe" /> is negative.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when the message stream could not be opened.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Live.Recording.RecordedMessageStreamEndpoint.OpenKeyframe(System.Int32)">
      <summary>
            Opens a new keyframe <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" /> for
            the keyframe with the specified <paramref name="keyframe" /> number.
            </summary>
      <param name="keyframe">The keyframe number.</param>
      <returns>A new keyframe <see cref="T:AK.F1.Timing.Messaging.Live.IO.IMessageStream" /> for
            the keyframe with the specified <paramref name="keyframe" /> number.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="keyframe" /> is negative.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when the keyframe stream could not be opened.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.ClearGridRowMessage">
      <summary>
            A message which clears a driver's grid row. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ClearGridRowMessage.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.DriverMessageBase" /> class and specifies
            the Id of the driver whos frid row should be cleared.
            </summary>
      <param name="driverId">The Id of the driver whos grid row is to be cleared.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ClearGridRowMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ClearGridRowMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.DriverMessageBase">
      <summary>
            Defines the base class for driver related messages. This class is <see langword="abstract" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.DriverMessageBase.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.DriverMessageBase" /> class and specifies
            the Id of the driver the message relates to.
            </summary>
      <param name="driverId">The Id of the driver the message is related to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.DriverMessageBase.DriverId">
      <summary>
            Gets the Id of the driver this message relates to.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.DriverStatus">
      <summary>
            Defines the various statuses of a driver during a session.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.DriverStatus.OnTrack">
      <summary>
            Indicates that the driver is currently out on track.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.DriverStatus.InPits">
      <summary>
            Indicates that the drivers is currently in the pits.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.DriverStatus.Out">
      <summary>
            Indicates that the driver is out of the current session.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.DriverStatus.Stopped">
      <summary>
            Indicates thet driver has stopped out on the track.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.DriverStatus.Retired">
      <summary>
            Indicates that the driver has retired from the race.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.Gap">
      <summary>
            Represents a gap. This class is <see langword="abstract" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.Gap.CompareTo(System.Object)">
      <summary>
                    Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
                </summary>
      <param name="obj">
                    An object to compare with this instance. 
                </param>
      <returns>
                    A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: 
                
                    Value 
                
                    Meaning 
                
                    Less than zero 
                
                    This instance is less than <paramref name="obj" />. 
                
                    Zero 
                
                    This instance is equal to <paramref name="obj" />. 
                
                    Greater than zero 
                
                    This instance is greater than <paramref name="obj" />. 
                </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is not the same type as this instance. 
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.Gap.Repr(System.String,System.Object[])">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this instance using the
            specified format <see cref="T:System.String" /> and format arguments.
            </summary>
      <param name="format">The format.</param>
      <param name="args">The format arguments.</param>
      <returns>A <see cref="T:System.String" /> representation of this instance using the
            specified format <see cref="T:System.String" /> and format arguments.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="format" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.FormatException">
            Thrown when the format of <paramref name="format" /> is invalid.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="format" /> references an argument not contained within
            <paramref name="args" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.GridColumn">
      <summary>
            Defines the columns found on an F1 timing grid.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Position">
      <summary>
            The position column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.CarNumber">
      <summary>
            The car number column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.DriverName">
      <summary>
            The driver name column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.LapTime">
      <summary>
            The lap time column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Gap">
      <summary>
            The gap time column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.S1">
      <summary>
            The sector one column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.S2">
      <summary>
            The sector two  column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.S3">
      <summary>
            The sector three column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Laps">
      <summary>
            The laps column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Interval">
      <summary>
            The interval time column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Q1">
      <summary>
            The qually one time column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Q2">
      <summary>
            The qually two time column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Q3">
      <summary>
            The qually three time column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.PitCount">
      <summary>
            The pit count column.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.PitLap1">
      <summary>
            The pit lap column one.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.PitLap2">
      <summary>
            The pit lap column two.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.PitLap3">
      <summary>
            The pit lap column three.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumn.Unknown">
      <summary>
            The unknown end column in the practice sessions.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour">
      <summary>
            Defines the various colours of an F1 timing grid
            <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.GridColumn" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.Black">
      <summary>
            Black.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.White">
      <summary>
            White.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.Red">
      <summary>
            Red.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.Green">
      <summary>
            Green.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.Magenta">
      <summary>
            Magenta.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.Blue">
      <summary>
            Blue.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.Yellow">
      <summary>
            Yellow.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour.Grey">
      <summary>
            Grey.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.LapGap">
      <summary>
            Represents a gap expressed as a number of laps. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.LapGap.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.LapGap" /> class and specifies the
            gap expressed as a number of laps.
            </summary>
      <param name="laps">The number of laps.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="laps" /> is not negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.LapGap.CompareTo(System.Object)">
      <summary>
                    Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
                </summary>
      <param name="obj">
                    An object to compare with this instance. 
                </param>
      <returns>
                    A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: 
                
                    Value 
                
                    Meaning 
                
                    Less than zero 
                
                    This instance is less than <paramref name="obj" />. 
                
                    Zero 
                
                    This instance is equal to <paramref name="obj" />. 
                
                    Greater than zero 
                
                    This instance is greater than <paramref name="obj" />. 
                </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is not the same type as this instance. 
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.LapGap.Equals(System.Object)">
      <summary>
                    Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
                </summary>
      <param name="obj">
                    The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. 
                </param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
                </returns>
      <exception cref="T:System.NullReferenceException">
                    The <paramref name="obj" /> parameter is null.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.LapGap.GetHashCode">
      <summary>
                    Serves as a hash function for a particular type. 
                </summary>
      <returns>
                    A hash code for the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.LapGap.Laps">
      <summary>
            Gets the number of laps represented by this gap.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.LapGap.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.LapGap.Zero">
      <summary>
            Defines a zero lap gap. This field is <see langword="readonly" />.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.PostedTime">
      <summary>
            Contains the time, type and lap number of a time posted during a timing session. This class
            cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.#ctor(System.TimeSpan,AK.F1.Timing.Messaging.Messages.Driver.PostedTimeType,System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.PostedTime" /> class.
            </summary>
      <param name="time">The posted time value.</param>
      <param name="type">The <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.PostedTimeType" /> of
            the posted time.</param>
      <param name="lapNumber">The lap number.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.CompareTo(AK.F1.Timing.Messaging.Messages.Driver.PostedTime)">
      <summary>
                    Compares the current object with another object of the same type.
                </summary>
      <param name="other">
                    An object to compare with this object.
                </param>
      <returns>
                    A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: 
                
                    Value 
                
                    Meaning 
                
                    Less than zero 
                
                    This object is less than the <paramref name="other" /> parameter.
                
                    Zero 
                
                    This object is equal to <paramref name="other" />. 
                
                    Greater than zero 
                
                    This object is greater than <paramref name="other" />. 
                </returns>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.CompareTo(System.Object)">
      <summary>
                    Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
                </summary>
      <param name="obj">
                    An object to compare with this instance. 
                </param>
      <returns>
                    A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: 
                
                    Value 
                
                    Meaning 
                
                    Less than zero 
                
                    This instance is less than <paramref name="obj" />. 
                
                    Zero 
                
                    This instance is equal to <paramref name="obj" />. 
                
                    Greater than zero 
                
                    This instance is greater than <paramref name="obj" />. 
                </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is not the same type as this instance. 
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.Equals(AK.F1.Timing.Messaging.Messages.Driver.PostedTime)">
      <summary>
                    Indicates whether the current object is equal to another object of the same type.
                </summary>
      <param name="other">
                    An object to compare with this object.
                </param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
                </returns>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.Equals(System.Object)">
      <summary>
                    Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
                </summary>
      <param name="obj">
                    The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. 
                </param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
                </returns>
      <exception cref="T:System.NullReferenceException">
                    The <paramref name="obj" /> parameter is null.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.GetHashCode">
      <summary>
                    Serves as a hash function for a particular type. 
                </summary>
      <returns>
                    A hash code for the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.LapNumber">
      <summary>
            Gets the lap number on which the time was posted.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.Time">
      <summary>
            Gets the value of this posted time.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.PostedTime.Type">
      <summary>
            Gets the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.PostedTimeType" /> of this posted time.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.PostedTimeType">
      <summary>
            Defines the type of time posted by a driver.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.PostedTimeType.Normal">
      <summary>
            A normal time.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.PostedTimeType.PersonalBest">
      <summary>
            A personal best time. The time is only relevant in the current this.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.PostedTimeType.SessionBest">
      <summary>
            A this best time. The time is only relevant in the current this.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage">
      <summary>
            A message which replaces a driver's previous lap time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage.#ctor(System.Int32,AK.F1.Timing.Messaging.Messages.Driver.PostedTime)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage" /> class and
            specifies if the Id of the driver and the previous lap time replacement.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="replacement">The previous lap time replacement.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="replacement" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage.Replacement">
      <summary>
            Gets the lap time replacement.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverLapTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage">
      <summary>
            A message which replaces a driver's previous sector time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage.#ctor(System.Int32,System.Int32,AK.F1.Timing.Messaging.Messages.Driver.PostedTime)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage" /> class and
            specifies if the Id of the driver, the sector number, and the previous sector time
            replacement.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="sectorNumber">The sector number.</param>
      <param name="replacement">The previous sector time replacement.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> or <paramref name="sectorNumber" /> is not positive.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="replacement" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage.Replacement">
      <summary>
            Gets the previous sector time replacement.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage.SectorNumber">
      <summary>
            Gets the sector number (one-based) of the posted time.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.ReplaceDriverSectorTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage">
      <summary>
            A message which sets a driver's car number. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage" /> class and
            specifies if the Id of the driver and the driver's car number.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="carNumber">The driver's new car number.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> or <paramref name="carNumber" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage.CarNumber">
      <summary>
            Gets the driver's new car number.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCarNumberMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage">
      <summary>
            A message which updates the number of laps completed by a driver. This class cannot be
            inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage" /> class
            and specifies if the Id of the driver and the number of completed laps.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="completedLaps">The number of completed laps.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage.CompletedLaps">
      <summary>
            Gets the number of completed laps.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverCompletedLapsMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage">
      <summary>
            A message which sets a driver's gap. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage.#ctor(System.Int32,AK.F1.Timing.Messaging.Messages.Driver.Gap)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage" /> class and
            specifies if the Id of the driver and the gap.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="gap">The gap.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="gap" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage.Gap">
      <summary>
            Gets the gap.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverGapMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage">
      <summary>
            A message which sets a driver's interval. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage.#ctor(System.Int32,AK.F1.Timing.Messaging.Messages.Driver.Gap)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage" /> class and
            specifies if the Id of the driver and the interval.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="interval">The interval.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="interval" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage.Interval">
      <summary>
            Gets the interval.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverIntervalMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage">
      <summary>
            A message which sets a driver's current lap number. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage" /> class and
            specifies if the Id of the driver and the lap number.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="lapNumber">The driver's new lap number.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage.LapNumber">
      <summary>
            Gets the lap number.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapNumberMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage">
      <summary>
            A message which sets a driver's lap time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage.#ctor(System.Int32,AK.F1.Timing.Messaging.Messages.Driver.PostedTime)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage" /> class and
            specifies if the Id of the driver and the lap time set by the driver.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="lapTime">The lap time.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="lapTime" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage.LapTime">
      <summary>
            Gets the posted lap time.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverLapTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage">
      <summary>
            A message which sets a driver's name. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage.#ctor(System.Int32,System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage" /> class
            and specifies if the Id of the driver and the driver's name.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="driverName">The driver's name.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="driverName" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage.DriverName">
      <summary>
            Gets the driver's new name.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverNameMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage">
      <summary>
            A message which sets a driver's current pit count. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage" /> class and
            specifies if the Id of the driver and the pit count.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="pitCount">The driver's new pit count.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage.PitCount">
      <summary>
            Gets the pit count.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitCountMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage">
      <summary>
            A message which sets the length of a driver's pit stop. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage.#ctor(System.Int32,System.TimeSpan,System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage" /> class and
            specifies if the Id of the driver, the pit time and the lap number on which the
            driver pitted.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="time">The pit time, inclusive of the time taken to travel the pit lane.</param>
      <param name="lapNumber">The lap number on which the driver pitted.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> or <paramref name="lapNumber" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage.LapNumber">
      <summary>
            Gets the lap number on which the driver pitted.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage.Time">
      <summary>
            Gets the pit time. This time includes the time taken to travel the length of the pit.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPitTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage">
      <summary>
            A message which sets a driver's track position. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage" /> class and
            specifies if the Id of the driver and the driver's new position.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="position">The driver's new position.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> or <paramref name="position" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage.Position">
      <summary>
            Gets the driver's new position.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverPositionMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage">
      <summary>
            A message which sets a driver's qually time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage.#ctor(System.Int32,System.Int32,System.TimeSpan)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage" /> class and
            specifies if the Id of the driver, the qually number and qually time.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="quallyNumber">The qually number.</param>
      <param name="quallyTime">The qually time.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> or <paramref name="quallyNumber" /> is not positive
            or <paramref name="quallyTime" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage.QuallyNumber">
      <summary>
            Gets the qually number (one-based) of the posted time.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage.QuallyTime">
      <summary>
            Gets the qually time.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverQuallyTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage">
      <summary>
            A message which sets a driver's sector time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage.#ctor(System.Int32,System.Int32,AK.F1.Timing.Messaging.Messages.Driver.PostedTime)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage" /> class and
            specifies if the Id of the driver, the sector number, and the sector time.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="sectorNumber">The sector number.</param>
      <param name="sectorTime">The sector time.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> or <paramref name="sectorNumber" /> is not positive.
            </exception>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="sectorTime" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage.SectorNumber">
      <summary>
            Gets the sector number (one-based) of the posted time.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage.SectorTime">
      <summary>
            Gets the posted sector time.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverSectorTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage">
      <summary>
            A message which sets a driver's <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.DriverStatus" />.
            This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage.#ctor(System.Int32,AK.F1.Timing.Messaging.Messages.Driver.DriverStatus)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage" /> class and
            specifies if the Id of the driver and the driver's status.
            </summary>
      <param name="driverId">The Id of the driver.</param>
      <param name="driverStatus">The driver's new status.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="driverId" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage.DriverStatus">
      <summary>
            Gets the driver's new status.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetDriverStatusMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage">
      <summary>
            A message which sets the colour of a driver's grid row. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage.#ctor(System.Int32,AK.F1.Timing.Messaging.Messages.Driver.GridColumn,AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage" /> class.
            </summary>
      <param name="driverId">The Id of the driver the message is related to.</param>
      <param name="column">The column whose value is to be set.</param>
      <param name="colour">The column colour value.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage.Colour">
      <summary>
            Gets the colour which to set the column.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage.Column">
      <summary>
            Gets the grid column to set the colour of.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnColourMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage">
      <summary>
            A message which sets the colour and value of a driver's grid row. This class cannot be
            inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage.#ctor(System.Int32,AK.F1.Timing.Messaging.Messages.Driver.GridColumn,AK.F1.Timing.Messaging.Messages.Driver.GridColumnColour,System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage" /> class.
            </summary>
      <param name="driverId">The Id of the driver the message is related to.</param>
      <param name="column">The column whose value is to be set.</param>
      <param name="colour">The column colour value.</param>
      <param name="value">The column value.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage.ClearColumn">
      <summary>
            Returns a value indicating if the column should be cleared.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage.Colour">
      <summary>
            Gets the colour which to set the column.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage.Column">
      <summary>
            Gest the column to set.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.SetGridColumnValueMessage.Value">
      <summary>
            Gets the value to set. Can be null.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Driver.TimeGap">
      <summary>
            Represents a gap expressed as a unit of time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.TimeGap.#ctor(System.TimeSpan)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Driver.TimeGap" /> class and specifies the
            gap expressed as a time.
            </summary>
      <param name="time">The gap expressed as a unit of time.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="time" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.TimeGap.CompareTo(System.Object)">
      <summary>
                    Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
                </summary>
      <param name="obj">
                    An object to compare with this instance. 
                </param>
      <returns>
                    A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: 
                
                    Value 
                
                    Meaning 
                
                    Less than zero 
                
                    This instance is less than <paramref name="obj" />. 
                
                    Zero 
                
                    This instance is equal to <paramref name="obj" />. 
                
                    Greater than zero 
                
                    This instance is greater than <paramref name="obj" />. 
                </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is not the same type as this instance. 
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.TimeGap.Equals(System.Object)">
      <summary>
                    Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
                </summary>
      <param name="obj">
                    The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. 
                </param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
                </returns>
      <exception cref="T:System.NullReferenceException">
                    The <paramref name="obj" /> parameter is null.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.TimeGap.GetHashCode">
      <summary>
                    Serves as a hash function for a particular type. 
                </summary>
      <returns>
                    A hash code for the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Driver.TimeGap.Time">
      <summary>
            Gets the <see cref="T:System.TimeSpan" /> represented by this gap.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Driver.TimeGap.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Driver.TimeGap.Zero">
      <summary>
            Defines a zero time gap. This field is <see langword="readonly" />.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage">
      <summary>
            A message which contains the copyright text associated with the message stream. This class
            cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage.#ctor(System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage" /> class and
            specifies the new copyright text.
            </summary>
      <param name="copyright">The new copyright text.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="copyright" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage.Copyright">
      <summary>
            Gets the new copyright text.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetCopyrightMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage">
      <summary>
            A message which sets the lastest ketframe number associated with the message stream. This
            class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage" /> class and specifies
            the new keyframe number.
            </summary>
      <param name="keyframe">The keyframe number.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="keyframe" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage.Keyframe">
      <summary>
            Gets the keyframe.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetKeyframeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage">
      <summary>
            A message which specifies the delay that should be inserted between the next message. This
            class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage.#ctor(System.TimeSpan)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage" /> class and
            specifies the delay between the next message.
            </summary>
      <param name="delay">The delay between the next message.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="delay" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage.Delay">
      <summary>
            Gets the delay between the next message.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetNextMessageDelayMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage">
      <summary>
            A message which sets the interval at which the live message stream should be pinged with a
            magic packet. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage.#ctor(System.TimeSpan)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage" /> class and
            specifies the refresh rate.
            </summary>
      <param name="pingInterval">The refresh rate.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="pingInterval" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage.PingInterval">
      <summary>
            Gets the ping interval.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetPingIntervalMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage">
      <summary>
            A message which sets a value indicating whether the message stream is valid. This class
            cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage.#ctor(System.Boolean)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage" /> class and
            specifies if the application is valid.
            </summary>
      <param name="isValid">
        <see langword="true" /> if the stream is valid, otherwise;
            <see langword="false" />.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage.IsValid">
      <summary>
            Gets a valid indicating if the feed is valid.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetStreamValidityMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage">
      <summary>
            A message which contains a message related to the state of the message stream. This class
            cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage.#ctor(System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage" /> class and
            specifies the new system message text.
            </summary>
      <param name="message">The new system message text.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="message" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage.Message">
      <summary>
            Gets the new system message text.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Feed.SetSystemMessageMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage">
      <summary>
            A message which adds a block commentary related to the current session. This class cannot
            be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage.#ctor(System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage" /> class and specifies
            the <paramref name="commentary" /> text.
            </summary>
      <param name="commentary">The commentary text.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="commentary" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage.Commentary">
      <summary>
            Gets the commentary text.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.AddCommentaryMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage">
      <summary>
            A message which indicates that the session has ended. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage.Instance">
      <summary>
            Defines the only <see cref="T:AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage" /> instance. This field is
            <see langword="readonly" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage.System#Runtime#Serialization#IObjectReference#GetRealObject(System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.
                </summary>
      <param name="context">
                    The <see cref="T:System.Runtime.Serialization.StreamingContext" /> from which the current object is deserialized. 
                </param>
      <returns>
                    Returns the actual object that is put into the graph.
                </returns>
      <exception cref="T:System.Security.SecurityException">
                    The caller does not have the required permission. The call will not work on a medium trusted server.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.EndOfSessionMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.SessionStatus">
      <summary>
            Defines the status of an F1 live timing session.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionStatus.Green">
      <summary>
            The race is running with no current incident.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionStatus.Yellow">
      <summary>
            There is an incident somewhere on the circuit. Yellow flags are being used to warn
            the drivers.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionStatus.SafetyCarOnStandBy">
      <summary>
            Yellow flags are out following an incident and the safety car is on standby.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionStatus.SafetyCarDeployed">
      <summary>
            Yellow flags and the safety car has been deployed due to a serious incident.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionStatus.Red">
      <summary>
            The practice this has been aborted or the race suspended due to a serious incident.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionStatus.Finished">
      <summary>
            The session has finished.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.SessionType">
      <summary>
            Defines the various types of F1 live timing sessions.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionType.None">
      <summary>
            Indicates that there is currently no session.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionType.Practice">
      <summary>
            Indicates the practice session.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionType.Qually">
      <summary>
            Indicates the qualification session.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.SessionType.Race">
      <summary>
            Indicates the race session.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage">
      <summary>
            A message which sets the elapsed session session time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage.#ctor(System.TimeSpan)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage" /> class
            and specifies the elapsed session time.
            </summary>
      <param name="elapsed">The elapsed session time..</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="elapsed" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage.Elapsed">
      <summary>
            Gets the elapsed session time.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetElapsedSessionTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage">
      <summary>
            A message which sets the current race lap number. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage" /> class and
            specifies the lap number.
            </summary>
      <param name="lapNumber">The lap number.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="lapNumber" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage.LapNumber">
      <summary>
            Gets the current race lap number.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetRaceLapNumberMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage">
      <summary>
            A message which sets the remaining session session time. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage.#ctor(System.TimeSpan)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage" /> class
            and specifies the remaining session time.
            </summary>
      <param name="remaining">The remaining session time.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="remaining" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage.Remaining">
      <summary>
            Gets the remaining session time.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetRemainingSessionTimeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage">
      <summary>
            A message which sets the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionStatus" />
            of the current session. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage.#ctor(AK.F1.Timing.Messaging.Messages.Session.SessionStatus)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage" /> class and
            specifies the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionStatus" />.
            </summary>
      <param name="sessionStatus">The current 
            <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionStatus" />.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage.SessionStatus">
      <summary>
            Gets the current <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionStatus" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetSessionStatusMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage">
      <summary>
            A message which updates the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionType" />
            and session identifier. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage.#ctor(AK.F1.Timing.Messaging.Messages.Session.SessionType,System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage" /> class and
            specifies the <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionType" /> and the session
            identifier.
            </summary>
      <param name="sessionType">The current
            <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionType" />.</param>
      <param name="sessionId">The session identifier.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage.SessionId">
      <summary>
            Gets the current session identifier.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage.SessionType">
      <summary>
            Gets the current <see cref="T:AK.F1.Timing.Messaging.Messages.Session.SessionType" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.SetSessionTypeMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage">
      <summary>
            A message which starts the remaining session time countdown. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage.Instance">
      <summary>
            Defines the only <see cref="T:AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage" /> instance. This field is
            <see langword="readonly" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage.System#Runtime#Serialization#IObjectReference#GetRealObject(System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.
                </summary>
      <param name="context">
                    The <see cref="T:System.Runtime.Serialization.StreamingContext" /> from which the current object is deserialized. 
                </param>
      <returns>
                    Returns the actual object that is put into the graph.
                </returns>
      <exception cref="T:System.Security.SecurityException">
                    The caller does not have the required permission. The call will not work on a medium trusted server.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.StartSessionTimeCountdownMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage">
      <summary>
            A message which stops the remaining session time countdown. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="F:AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage.Instance">
      <summary>
            Defines the only <see cref="T:AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage" /> instance. This field is
            <see langword="readonly" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage.System#Runtime#Serialization#IObjectReference#GetRealObject(System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.
                </summary>
      <param name="context">
                    The <see cref="T:System.Runtime.Serialization.StreamingContext" /> from which the current object is deserialized. 
                </param>
      <returns>
                    Returns the actual object that is put into the graph.
                </returns>
      <exception cref="T:System.Security.SecurityException">
                    The caller does not have the required permission. The call will not work on a medium trusted server.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Session.StopSessionTimeCountdownMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage">
      <summary>
            A message which sets the current air temperature, in degrees celsius. This class cannot be
            inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage.#ctor(System.Double)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage" /> class and
            specifies the new air temperature, in degrees celsius.
            </summary>
      <param name="temperature">The air temperature, in degrees celsius.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage.Temperature">
      <summary>
            Gets the current air temperature, in degrees celsius.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetAirTemperatureMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage">
      <summary>
            A message which sets the current atmospheric pressure, in millibars. This class cannot be
            inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage.#ctor(System.Double)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage" /> class
            and specifies the new atmospheric pressure, in millibars.
            </summary>
      <param name="pressure">The atmospheric pressure, in millibars.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="pressure" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage.Pressure">
      <summary>
            Gets the current atmospheric pressure, in millibars.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetAtmosphericPressureMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage">
      <summary>
            A message which sets the current humidity, as a percentage. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage.#ctor(System.Double)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage" /> class and
            specifies the new humidity, as a percentage.
            </summary>
      <param name="humidity">The humidity, as a percentage.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="humidity" /> is negative or greater than one hundred.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage.Humidity">
      <summary>
            Gets the current humidity, as a percentage.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetHumidityMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage">
      <summary>
            A message which specifies whether the track is dry or wet. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage.#ctor(System.Boolean)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage" /> class and specifies
            whether the track is wet or dry.
            </summary>
      <param name="isWet">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="isWet"/&gt; documentation for "M:AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage.#ctor(System.Boolean)"]</p>
      </param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage.IsWet">
      <summary>
            Gets a value indicating if the track is wet.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetIsWetMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage">
      <summary>
            A message which sets the current track temperature, in degrees celsius. This class cannot
            be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage.#ctor(System.Double)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage" /> class and
            specifies the new track temperature, in degrees celsius.
            </summary>
      <param name="temperature">The track temperature, in degrees celsius.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage.Temperature">
      <summary>
            Gets the current track temperature, in degrees celsius.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetTrackTemperatureMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage">
      <summary>
            A message which sets the current wind direction, in degrees.  This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage" /> class and
            specifies the wind angle, in degrees.
            </summary>
      <param name="angle">The wind angle, in degrees.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="angle" /> is negative or greater than 360.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage.Angle">
      <summary>
            Gets the current wind angle, in degrees.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetWindAngleMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage">
      <summary>
            A message which sets the current wind speed, in metres per second. This class cannot be
            inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage.#ctor(System.Double)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage" /> class and
            specifies the new wind speed, in metres per second.
            </summary>
      <param name="speed">The wind speed, in metres per second.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="speed" /> is negative.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage.Accept(AK.F1.Timing.Messaging.IMessageVisitor)">
      <summary>
            Accepts the specified <see cref="T:AK.F1.Timing.Messaging.IMessageVisitor" />.
            </summary>
      <param name="visitor">The message visitor.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="visitor" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage.Speed">
      <summary>
            Gets the current wind speed, in metres per second.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Messages.Weather.SetWindSpeedMessage.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Playback.IRecordedMessageReader">
      <summary>
            Allows recorded <see cref="T:AK.F1.Timing.Messaging.Message" />s to be read from an underlying
            data stream and played back at a certain speed.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Playback.IRecordedMessageReader.PlaybackSpeed">
      <summary>
            Gets or sets the playback speed.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="value" /> is not positive.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Playback.RecordedMessageReader">
      <summary>
            Provides a <see cref="T:AK.F1.Timing.Messaging.Playback.IRecordedMessageReader" /> which reads
            <see cref="T:AK.F1.Timing.Messaging.Message" />s which have been recorded by a
            <see cref="T:AK.F1.Timing.Messaging.Playback.RecordingMessageReader" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordedMessageReader.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Playback.RecordedMessageReader" /> class and specifies
            the <paramref name="input" /> stream and a value indicating if the stream is owned by the
            reader.
            </summary>
      <param name="input">The input stream.</param>
      <param name="ownsInput">
        <see langword="true" /> if the reader owns the specified
            <paramref name="input" /> stream, otherwise; <see langword="false" />.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordedMessageReader.#ctor(System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Playback.RecordedMessageReader" /> class and specifies
            the input file <paramref name="path" />.
            </summary>
      <param name="path">The input file path.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="path" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when an IO error occurs whilst creating the internal
            <see cref="T:System.IO.FileStream" /> using the supplied arguments.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordedMessageReader.Dispose(System.Boolean)">
      <summary>
            Disposes of this instance.
            </summary>
      <param name="disposing">
        <see langword="true" /> if being called explicitly, otherwise;
            <see langword="false" /> to indicate being called implicitly by the GC.</param>
    </member>
    <member name="P:AK.F1.Timing.Messaging.Playback.RecordedMessageReader.PlaybackSpeed">
      <summary>
            Gets or sets the playback speed.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="value" /> is not positive.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordedMessageReader.ReadImpl">
      <summary>
            When overriden in a derived class; reads the next <see cref="T:AK.F1.Timing.Messaging.Message" />
            from the underlying data stream.
            </summary>
      <returns>The next <see cref="T:AK.F1.Timing.Messaging.Message" />.</returns>
    </member>
    <member name="T:AK.F1.Timing.Messaging.Playback.RecordingMessageReader">
      <summary>
            Provides a <see cref="T:AK.F1.Timing.Messaging.IMessageReader" /> decorator which records
            the <see cref="T:AK.F1.Timing.Messaging.Message" />s read from an inner
            <see cref="T:AK.F1.Timing.Messaging.IMessageReader" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordingMessageReader.#ctor(AK.F1.Timing.Messaging.IMessageReader,System.IO.Stream,System.Boolean)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Playback.RecordingMessageReader" /> class and
            specified the inner message reader, the output stream and a value indicating if the
            decorator owns the output.
            </summary>
      <param name="inner">The inner message reader.</param>
      <param name="output">The output stream.</param>
      <param name="ownsOutput">
        <see langword="true" /> if the decorator owns the specified output
            stream, otherwise; <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="inner" /> or <paramref name="output" /> is
            <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordingMessageReader.#ctor(AK.F1.Timing.Messaging.IMessageReader,System.String)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Messaging.Playback.RecordingMessageReader" /> class and
            specified the inner message reader and the output file path.
            </summary>
      <param name="inner">The inner message reader.</param>
      <param name="path">The output file path.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="inner" /> or <paramref name="path" /> is
            <see langword="null" />.
            </exception>
      <exception cref="T:System.IO.IOException">
            Thrown when an IO error occurs whilst creating the internal
            <see cref="T:System.IO.FileStream" /> using the supplied arguments.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordingMessageReader.Dispose(System.Boolean)">
      <summary>
            Disposes of this instance.
            </summary>
      <param name="disposing">
        <see langword="true" /> if being called explicitly, otherwise;
            <see langword="false" /> to indicate being called implicitly by the GC.</param>
    </member>
    <member name="M:AK.F1.Timing.Messaging.Playback.RecordingMessageReader.ReadImpl">
      <summary>
            When overriden in a derived class; reads the next <see cref="T:AK.F1.Timing.Messaging.Message" />
            from the underlying data stream.
            </summary>
      <returns>The next <see cref="T:AK.F1.Timing.Messaging.Message" />.</returns>
    </member>
    <member name="T:AK.F1.Timing.Serialization.DecoratedObjectReader">
      <summary>
            Reads objects that have been serialized by an <see cref="T:AK.F1.Timing.Serialization.DecoratedObjectWriter" />. This
            class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.DecoratedObjectReader.#ctor(System.IO.Stream)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Serialization.DecoratedObjectReader" /> class and
            specifies the underlying <paramref name="input" /> stream.
            </summary>
      <param name="input">The input stream.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.DecoratedObjectReader.Read">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:AK.F1.Timing.Serialization.DecoratedObjectReader.Read"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:AK.F1.Timing.Serialization.DecoratedObjectReader.Read"]</p>
      </returns>
    </member>
    <member name="T:AK.F1.Timing.Serialization.DecoratedObjectWriter">
      <summary>
            Writes objects to an underlying output stream that have been decorated with a
            <see cref="T:AK.F1.Timing.Serialization.TypeIdAttribute" />. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.DecoratedObjectWriter.#ctor(System.IO.Stream)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Serialization.DecoratedObjectWriter" /> class and specifies the
            underlying <paramref name="output" /> stream.
            </summary>
      <param name="output">The output stream.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="output" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.DecoratedObjectWriter.Write(System.Object)">
      <summary>
            Writes the specified graph to the underlying stream.
            </summary>
      <param name="graph">The graph.</param>
      <exception cref="T:System.ObjectDisposedException">
            Thrown when this instance has been disposed of.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when an error occurs during serialization.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Serialization.IgnorePropertyAttribute">
      <summary>
            Specifies that the decorated property should not be serialized. This class is
            <see langword="sealed" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.IgnorePropertyAttribute.#ctor">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Serialization.IgnorePropertyAttribute" /> class.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Serialization.IObjectReader">
      <summary>
            Defines a type which reads serialized objects from an underlying data stream.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.IObjectReader.Read">
      <summary>
            Reads a serialized object from the underlying stream.
            </summary>
      <returns>The serialized object from the underlying stream.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when an error occurs during deserialization.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Serialization.IObjectWriter">
      <summary>
            Defines a type which serializes objects to an underlying data stream.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.IObjectWriter.Write(System.Object)">
      <summary>
            Writes the specified graph to the underlying stream.
            </summary>
      <param name="graph">The graph.</param>
      <exception cref="T:System.ObjectDisposedException">
            Thrown when this instance has been disposed of.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when an error occurs during serialization.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Serialization.ObjectTypeCode">
      <summary>
            A <see cref="T:System.TypeCode" /> superset which specifies other well known types.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Empty">
      <summary>
            A null reference.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Object">
      <summary>
            A <see cref="T:System.Object" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.DBNull">
      <summary>
            A <see cref="T:System.DBNull" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Boolean">
      <summary>
            A <see cref="T:System.Boolean" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Char">
      <summary>
            A <see cref="T:System.Char" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.SByte">
      <summary>
            A <see cref="T:System.SByte" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Byte">
      <summary>
            A <see cref="T:System.Byte" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Int16">
      <summary>
            A <see cref="T:System.Int16" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.UInt16">
      <summary>
            A <see cref="T:System.UInt16" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Int32">
      <summary>
            A <see cref="T:System.Int32" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.UInt32">
      <summary>
            A <see cref="T:System.UInt32" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Int64">
      <summary>
            A <see cref="T:System.Int64" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.UInt64">
      <summary>
            A <see cref="T:System.UInt64" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Single">
      <summary>
            A <see cref="T:System.Single" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Double">
      <summary>
            A <see cref="T:System.Double" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.Decimal">
      <summary>
            A <see cref="T:System.Decimal" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.DateTime">
      <summary>
            A <see cref="T:System.DateTime" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.String">
      <summary>
            A <see cref="T:System.String" />.
            </summary>
    </member>
    <member name="F:AK.F1.Timing.Serialization.ObjectTypeCode.TimeSpan">
      <summary>
            A <see cref="T:System.TimeSpan" />.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Serialization.PropertyDescriptor">
      <summary>
            Provides <see cref="T:System.Reflection.PropertyInfo" /> information required during
            serialization and deserialization by the <see cref="T:AK.F1.Timing.Serialization.DecoratedObjectWriter" /> and
            <see cref="T:AK.F1.Timing.Serialization.DecoratedObjectReader" /> respectively. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.Equals(AK.F1.Timing.Serialization.PropertyDescriptor)">
      <summary>
                    Indicates whether the current object is equal to another object of the same type.
                </summary>
      <param name="other">
                    An object to compare with this object.
                </param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
                </returns>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.Equals(System.Object)">
      <summary>
                    Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
                </summary>
      <param name="obj">
                    The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. 
                </param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
                </returns>
      <exception cref="T:System.NullReferenceException">
                    The <paramref name="obj" /> parameter is null.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.For(System.Reflection.PropertyInfo)">
      <summary>
            Returns the <see cref="T:AK.F1.Timing.Serialization.PropertyDescriptor" /> for the specified
            <paramref name="property" />.
            </summary>
      <param name="property">The property.</param>
      <returns>The <see cref="T:AK.F1.Timing.Serialization.PropertyDescriptor" /> for the specified
            <paramref name="property" />.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when the specified <paramref name="property" /> has not been decorated with the
            <see cref="T:AK.F1.Timing.Serialization.PropertyIdAttribute" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.GetHashCode">
      <summary>
                    Serves as a hash function for a particular type. 
                </summary>
      <returns>
                    A hash code for the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.GetValue(System.Object)">
      <summary>
            Returns the value of the property given the specified <paramref name="instance" />.
            </summary>
      <param name="instance">The instance.</param>
      <returns>The value of the property given the specified
            <paramref name="instance" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="instance" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Serialization.PropertyDescriptor.Property">
      <summary>
            Gets the underlying <see cref="T:System.Reflection.PropertyInfo" /> which provides
            information about the property.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Serialization.PropertyDescriptor.PropertyId">
      <summary>
            Gets the property identifier.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>
            Sets this property to the given <paramref name="value" /> on the given
            <paramref name="instance" />.
            </summary>
      <param name="instance">The instance.</param>
      <param name="value">The value.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="instance" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
                </summary>
      <param name="info">
                    The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. 
                </param>
      <param name="context">
                    The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization. 
                </param>
      <exception cref="T:System.Security.SecurityException">
                    The caller does not have the required permission. 
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptor.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="T:AK.F1.Timing.Serialization.PropertyDescriptorCollection">
      <summary>
            A unique collection of <see cref="T:AK.F1.Timing.Serialization.PropertyDescriptor" />s. This class is
            <see langword="sealed" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptorCollection.#ctor">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Serialization.PropertyDescriptorCollection" /> class.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptorCollection.GetById(System.Int32)">
      <summary>
            Returns the property with the specified <paramref name="id" />, or <see langword="null" />
            if no property is matched.
            </summary>
      <param name="id">The identifier of the property to match.</param>
      <returns>The property with the specified <paramref name="id" />, or <see langword="null" />
            if no property is matched.</returns>
    </member>
    <member name="P:AK.F1.Timing.Serialization.PropertyDescriptorCollection.IsSealed">
      <summary>
            Gets a value indicating if this collection is sealed.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyDescriptorCollection.Seal">
      <summary>
            Seals this collection.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Serialization.PropertyIdAttribute">
      <summary>
            Specifies the identifier of the decorated property. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.PropertyIdAttribute.#ctor(System.Byte)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Serialization.PropertyIdAttribute" /> class and specifies
            the identifier of the decorated property.
            </summary>
      <param name="id">The identifier of the decorated property.</param>
    </member>
    <member name="P:AK.F1.Timing.Serialization.PropertyIdAttribute.Id">
      <summary>
            Gets identifier of the decorated property.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Serialization.SerializationHelper">
      <summary>
            Serialization helper class. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.SerializationHelper.GetObjectTypeCode(System.Type)">
      <summary>
            Returns the <see cref="T:AK.F1.Timing.Serialization.ObjectTypeCode" /> for the specified <paramref name="type" />.
            </summary>
      <param name="type">The type.</param>
      <returns>The <see cref="T:AK.F1.Timing.Serialization.ObjectTypeCode" /> for the specified <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="type" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.SerializationHelper.GetUninitializedInstance(System.Type)">
      <summary>
            Returns an un-initialised instance of the specified <paramref name="type" />.
            </summary>
      <param name="type">The type to create an instance of.</param>
      <returns>An un-initialised instance of the specified <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="type" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:AK.F1.Timing.Serialization.TypeDescriptor">
      <summary>
            Provides <see cref="T:System.Type" /> information required during serialization and
            deserialization by the <see cref="T:AK.F1.Timing.Serialization.DecoratedObjectWriter" /> and
            <see cref="T:AK.F1.Timing.Serialization.DecoratedObjectReader" /> respectively. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.Equals(AK.F1.Timing.Serialization.TypeDescriptor)">
      <summary>
                    Indicates whether the current object is equal to another object of the same type.
                </summary>
      <param name="other">
                    An object to compare with this object.
                </param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
                </returns>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.Equals(System.Object)">
      <summary>
                    Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
                </summary>
      <param name="obj">
                    The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. 
                </param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
                </returns>
      <exception cref="T:System.NullReferenceException">
                    The <paramref name="obj" /> parameter is null.
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.For(System.Int32)">
      <summary>
            Returns the <see cref="T:AK.F1.Timing.Serialization.TypeDescriptor" /> for the type with the specified identifier.
            </summary>
      <param name="typeId">The identifier of the type descriptor to return.</param>
      <returns>The <see cref="T:AK.F1.Timing.Serialization.TypeDescriptor" /> for the type with the specified
            identifier.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when the <see cref="T:AK.F1.Timing.Serialization.TypeDescriptor" /> could not be located.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.For(System.Type)">
      <summary>
            Returns the <see cref="T:AK.F1.Timing.Serialization.TypeDescriptor" /> for the specified <paramref name="type" />.
            </summary>
      <param name="type">The type.</param>
      <returns>The <see cref="T:AK.F1.Timing.Serialization.TypeDescriptor" /> for the specified <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="type" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Thrown when the specified <paramref name="type" /> has not been decorated with the
            <see cref="T:AK.F1.Timing.Serialization.TypeIdAttribute" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.GetHashCode">
      <summary>
                    Serves as a hash function for a particular type. 
                </summary>
      <returns>
                    A hash code for the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.LoadFrom(System.Reflection.Assembly)">
      <summary>
            Searches the specified <paramref name="assembly" /> for types decorated with the
            <see cref="T:AK.F1.Timing.Serialization.TypeIdAttribute" /> and creates a <see cref="T:AK.F1.Timing.Serialization.TypeDescriptor" /> for each. Note
            that the descriptors for the currently executing assembly are loaded automatically.
            </summary>
      <param name="assembly">The assembly to search.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="type" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:AK.F1.Timing.Serialization.TypeDescriptor.Properties">
      <summary>
            Gets the collection of properties defined by the type.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
                </summary>
      <param name="info">
                    The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. 
                </param>
      <param name="context">
                    The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization. 
                </param>
      <exception cref="T:System.Security.SecurityException">
                    The caller does not have the required permission. 
                </exception>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeDescriptor.ToString">
      <summary>
                    Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </summary>
      <returns>
                    A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
                </returns>
    </member>
    <member name="P:AK.F1.Timing.Serialization.TypeDescriptor.Type">
      <summary>
            Gets the underlying <see cref="T:System.Type" /> which provides information about the type.
            </summary>
    </member>
    <member name="P:AK.F1.Timing.Serialization.TypeDescriptor.TypeId">
      <summary>
            Gets the type identifier.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Serialization.TypeIdAttribute">
      <summary>
            Specifies the identifier of the decorated type. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Serialization.TypeIdAttribute.#ctor(System.Int32)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Serialization.TypeIdAttribute" /> class and specifies
            the identifier of the decorated type.
            </summary>
      <param name="id">The identifier of the decorated type.</param>
    </member>
    <member name="P:AK.F1.Timing.Serialization.TypeIdAttribute.Id">
      <summary>
            Gets identifier of the decorated type.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Utility.Disposable">
      <summary>
            Defines a base for a class which implements the Disposable pattern. This class
            is <see langword="abstract" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Utility.Disposable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:AK.F1.Timing.Utility.Disposable" /> class</summary>
    </member>
    <member name="M:AK.F1.Timing.Utility.Disposable.CheckDisposed">
      <summary>
            Helper method to throw a <see cref="T:System.ObjectDisposedException" /> if this instance
            has been disposed of.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
            Thrown when this instance has been disposed of.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Utility.Disposable.Dispose(System.Boolean)">
      <summary>
            Disposes of this instance.
            </summary>
      <param name="disposing">
        <see langword="true" /> if being called explicitly, otherwise;
            <see langword="false" /> to indicate being called implicitly by the GC.</param>
    </member>
    <member name="M:AK.F1.Timing.Utility.Disposable.DisposeOf(System.IDisposable)">
      <summary>
            Helper method to safely dispose of the specified disposable instance.
            </summary>
      <param name="disposable">The disposable instance. Can be null.</param>
    </member>
    <member name="P:AK.F1.Timing.Utility.Disposable.IsDisposed">
      <summary>
            Gets a value indicating if this instance has been disposed of.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Utility.Disposable.System#IDisposable#Dispose">
      <summary>
                    Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
                </summary>
    </member>
    <member name="T:AK.F1.Timing.Utility.DisposableCallback">
      <summary>
            Provides the facility to invoke a callback method when the action has been disposed of.
            This class cannot be inherited.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Utility.DisposableCallback.#ctor(System.Action)">
      <summary>
            Initialises a new instance of the <see cref="T:AK.F1.Timing.Utility.DisposableCallback" /> class and specifies
            the <paramref name="callback" /> to invoke when this instance is disposed.
            </summary>
      <param name="callback">The callback method to invoke when
            this instance of disposed of.</param>
      <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="callback" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:AK.F1.Timing.Utility.DisposableCallback.Dispose">
      <summary>
            Disposes of this instance.
            </summary>
    </member>
    <member name="T:AK.F1.Timing.Utility.HashCodeBuilder">
      <summary>
            Provides a handy hash code builder.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Utility.HashCodeBuilder.Add``1(``0)">
      <summary>
            Adds the hash code of the specified object to the builder.
            </summary>
      <param name="obj">The object whose hash code will be added to the builer.</param>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.Add``1(``0)"]</p>
      </typeparam>
      <returns>This builder.</returns>
    </member>
    <member name="M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(AK.F1.Timing.Utility.HashCodeBuilder)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(AK.F1.Timing.Utility.HashCodeBuilder)"]</p>
      </summary>
      <param name="other">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="other"/&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(AK.F1.Timing.Utility.HashCodeBuilder)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(AK.F1.Timing.Utility.HashCodeBuilder)"]</p>
      </returns>
    </member>
    <member name="M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(System.Object)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(System.Object)"]</p>
      </summary>
      <param name="obj">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="obj"/&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(System.Object)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.Equals(System.Object)"]</p>
      </returns>
    </member>
    <member name="M:AK.F1.Timing.Utility.HashCodeBuilder.GetHashCode">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.GetHashCode"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.GetHashCode"]</p>
      </returns>
    </member>
    <member name="M:AK.F1.Timing.Utility.HashCodeBuilder.New">
      <summary>
            Creates and initialises a new <see cref="T:AK.F1.Timing.Utility.HashCodeBuilder" />.
            </summary>
      <returns>A a new <see cref="T:AK.F1.Timing.Utility.HashCodeBuilder" /></returns>
    </member>
    <member name="M:AK.F1.Timing.Utility.HashCodeBuilder.op_Implicit(AK.F1.Timing.Utility.HashCodeBuilder)~System.Int32">
      <summary>
            Converts the specified <paramref name="builder" /> to an <see cref="T:System.Int32" />.
            </summary>
      <param name="builder">The builder to convert.</param>
      <returns>The specified <paramref name="builder" /> to an <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:AK.F1.Timing.Utility.HashCodeBuilder.ToString">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.ToString"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:AK.F1.Timing.Utility.HashCodeBuilder.ToString"]</p>
      </returns>
    </member>
    <member name="T:AK.F1.Timing.Utility.SysClock">
      <summary>
            Provides uniform access to the system's clock. This class is <see langword="static" />.
            </summary>
    </member>
    <member name="M:AK.F1.Timing.Utility.SysClock.Now">
      <summary>
            Returns the current system time.
            </summary>
      <returns>The current system time.</returns>
    </member>
  </members>
</doc>