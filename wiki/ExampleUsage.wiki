#summary Examples showing simple usage
#labels Featured

==Reading the live feed==

The example below shows how to log into the live-timing feed, create a message reader and read all messages until the end of the stream is reached.

{{{
Message message;
// Log into the service.
AuthenticationToken token = F1Timing.Live.Login("your-username", "your-password");
// Create a message reader using the issued token.
using(IMessageReader reader = F1Timing.Live.Read(token)) {
    // Read all messages until the end of the stream is reached (indicated by a null message)
    while((message = reader.Read()) != null) {
        // Do something with the message.
        Console.WriteLine(message);
    }
}
}}}

==Reading and record the live feed==

The example below shows how to log into the live-timing feed, create a recording message reader and read all messages until the end of the stream is reached.


{{{
Message message;
// The path to record to.
string path = "session.tms";
// Log into the service.
AuthenticationToken token = F1Timing.Live.Login("your-username", "your-password");
// Create a message reader using the issued token and record the message to the given path.
using(IMessageReader reader = F1Timing.Live.ReadAndRecord(token, path)) {
    // Read all messages until the end of the stream is reached (indicated by a null message)
    while((message = reader.Read()) != null) {
        // Do something with the message.
        Console.WriteLine(message);
    }
}
}}}

==Playback a recorded session==

The example below shows how to read a session which has been previously recorded.


{{{
Message message;
// The path of the recorded sesssion.
string path = "session.tms";
// Create a message reader using the given path.
using(IRecordedMessageReader reader = F1Timing.Playback.Read(path)) {
    // An IRecordedMessageReader allows you to change the playback speed.
    // For example, lets play this session back at 2x speed.
    reader.PlaybackSpeed = 2d;
    // Read all messages until the end of the stream is reached (indicated by a null message)
    while((message = reader.Read()) != null) {
        // Do something with the message.
        Console.WriteLine(message);
    }
}
}}}