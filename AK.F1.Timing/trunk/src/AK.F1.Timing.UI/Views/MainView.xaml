<Window
    x:Class="AK.F1.Timing.UI.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="clr-namespace:AK.F1.Timing.UI.Controls"
    xmlns:converters="clr-namespace:AK.F1.Timing.UI.Converters"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:datavis="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
    xmlns:charting="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"    
    Width="1102" Height="630"
    HorizontalAlignment="Left"
    Background="{StaticResource ControlBackgroundBrush}"
    Title="AK.F1.Timing.UI"
    WindowStartupLocation="CenterScreen"
    WindowStyle="SingleBorderWindow">
    <Window.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        </Style>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="6,3,6,3"/>
        </Style>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftAlignedHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Margin" Value="6,0,0,4"/>
        </Style>
        <Style x:Key="PitLapHeader" BasedOn="{StaticResource LeftAlignedHeader}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Width" Value="18"/>
        </Style>
        <Style x:Key="SectorHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Width" Value="31"/>
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="SelectedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocussedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocussedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" SnapsToDevicePixels="true">
                            <Grid>
                                <Rectangle x:Name="HoverRectangle" Fill="{StaticResource NormalBrush}" IsHitTestVisible="False" Opacity="0" RadiusX="1" RadiusY="1"/>
                                <Rectangle x:Name="SelectedRectangle" Fill="{StaticResource NormalBrush}" IsHitTestVisible="False" Opacity="0" RadiusX="1" RadiusY="1"/>
                                <GridViewRowPresenter VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                                </MultiTrigger.ExitActions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Selector.IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Selector.IsSelected" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <converters:GridColumnColourConverter x:Key="GridColumnColourConverter"/>
        <converters:LapTimeConverter x:Key="LapTimeConverter"/>
        <converters:SectorTimeConverter x:Key="SectorTimeConverter"/>
        <converters:LapNumberConverter x:Key="LapNumberConverter"/>
        <converters:PositionConverter x:Key="PositionConverter"/>
        <converters:PostedTimeTypeToColourConverter x:Key="PostedTimeTypeToColourConverter"/>
        <converters:SessionStatusToColourConverter x:Key="SessionStatusToColourConverter"/>
        <Style x:Key="StandardColumn" TargetType="{x:Type Control}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <TextBlock Margin="-5,0,-6,0" Foreground="{Binding Path=TextColour, Converter={StaticResource GridColumnColourConverter}}" Text="{Binding Path=Text}" TextAlignment="Right"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftAlignedColumn" TargetType="{x:Type Control}">
            <Setter Property="Margin" Value="0,0,-6,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <TextBlock Margin="{TemplateBinding Margin}" Foreground="{Binding Path=TextColour, Converter={StaticResource GridColumnColourConverter}}" Text="{Binding Path=Text}" TextAlignment="Left"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PitLapColumn" BasedOn="{StaticResource LeftAlignedColumn}" TargetType="{x:Type Control}">
            <Setter Property="Margin" Value="-2,0,-6,0"/>
        </Style>
        <Style x:Key="GridSessionText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="Border" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="3"/>
            <Setter Property="BorderBrush" Value="{StaticResource NormalBrush}"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="3"/>
        </Style>
    </Window.Resources>
    <StackPanel Margin="4">
        <StackPanel Orientation="Horizontal">
            <Border x:Name="GridBorder" HorizontalAlignment="Left" Style="{StaticResource Border}">
                <StackPanel Orientation="Vertical">
                    <ListView MinHeight="350" HorizontalAlignment="Left" BorderThickness="0" ItemsSource="{Binding Path=Session.Grid.Rows}" SelectedItem="{Binding SelectedGridRow}" SelectionMode="Single">
                        <ListView.View>
                            <GridView AllowsColumnReorder="False">
                                <GridViewColumn Width="15" Header="P">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding Position}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="25" Header="C">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding CarNumber}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="100" Header="Driver" HeaderContainerStyle="{StaticResource LeftAlignedHeader}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding DriverName}" Style="{StaticResource LeftAlignedColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="30" Header="G">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding Gap}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="30" Header="I">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding Interval}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="55" Header="L">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding LapTime}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="S1" HeaderContainerStyle="{StaticResource SectorHeader}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding S1}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn HeaderContainerStyle="{StaticResource PitLapHeader}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding PitLap1}" Style="{StaticResource PitLapColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="S2" HeaderContainerStyle="{StaticResource SectorHeader}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding S2}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn HeaderContainerStyle="{StaticResource PitLapHeader}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding PitLap2}" Style="{StaticResource PitLapColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="S3" HeaderContainerStyle="{StaticResource SectorHeader}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding S3}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn HeaderContainerStyle="{StaticResource PitLapHeader}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding PitLap3}" Style="{StaticResource PitLapColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="20" Header="Pit">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Control DataContext="{Binding PitCount}" Style="{StaticResource StandardColumn}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Grid Margin="3,3,3,3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" Style="{StaticResource GridSessionText}" Text="{Binding Session.ElapsedSessionTime}"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Foreground="{Binding Path=Session.SessionStatus, Converter={StaticResource SessionStatusToColourConverter}}" HorizontalAlignment="Center" Style="{StaticResource GridSessionText}" Text="{Binding Session.SessionStatus}"/>
                        <TextBlock Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Style="{StaticResource GridSessionText}" Text="{Binding Session.RemainingSessionTime}"/>
                    </Grid>
                </StackPanel>
            </Border>
            <StackPanel Orientation="Vertical">
                <Border HorizontalAlignment="Stretch" Margin="6,0,0,0" Style="{StaticResource Border}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" DataContext="{Binding Session.FastestTimes}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>                        
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="S1:"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" Text="{Binding Path=S1.Time, Converter={StaticResource SectorTimeConverter}}"/>
                        <TextBlock Grid.Column="2" Grid.Row="0" HorizontalAlignment="Center" Text="{Binding Path=S1.Driver.Name}"/>
                        <TextBlock Grid.Column="3" Grid.Row="0" HorizontalAlignment="Right" Text="{Binding Path=S1.LapNumber, Converter={StaticResource LapNumberConverter}}"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="S2:"/>
                        <TextBlock Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" Text="{Binding Path=S2.Time, Converter={StaticResource SectorTimeConverter}}"/>
                        <TextBlock Grid.Column="2" Grid.Row="1" HorizontalAlignment="Center" Text="{Binding Path=S2.Driver.Name}"/>
                        <TextBlock Grid.Column="3" Grid.Row="1" HorizontalAlignment="Right" Text="{Binding Path=S2.LapNumber, Converter={StaticResource LapNumberConverter}}"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="S3:"/>
                        <TextBlock Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" Text="{Binding Path=S3.Time, Converter={StaticResource SectorTimeConverter}}"/>
                        <TextBlock Grid.Column="2" Grid.Row="2" HorizontalAlignment="Center" Text="{Binding Path=S3.Driver.Name}"/>
                        <TextBlock Grid.Column="3" Grid.Row="2" HorizontalAlignment="Right" Text="{Binding Path=S3.LapNumber, Converter={StaticResource LapNumberConverter}}"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="Lap:"/>
                        <TextBlock Grid.Column="1" Grid.Row="3" HorizontalAlignment="Right" Text="{Binding Path=Lap.Time, Converter={StaticResource LapTimeConverter}}"/>
                        <TextBlock Grid.Column="2" Grid.Row="3" HorizontalAlignment="Center" Text="{Binding Path=Lap.Driver.Name}"/>
                        <TextBlock Grid.Column="3" Grid.Row="3" HorizontalAlignment="Right" Text="{Binding Path=Lap.LapNumber, Converter={StaticResource LapNumberConverter}}"/>
                        <TextBlock Grid.Column="0" Grid.Row="4" Text="Possible:"/>
                        <TextBlock Grid.Column="1" Grid.Row="4" HorizontalAlignment="Right" Text="{Binding Path=Possible, Converter={StaticResource LapTimeConverter}}"/>                        
                    </Grid>
                </Border>
                <Border Height="300" HorizontalAlignment="Stretch" Margin="6,6,0,0" DataContext="{Binding SelectedDriver}" Style="{StaticResource Border}">
                    <StackPanel>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" Text="{Binding CarNumber}"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Text="{Binding Name}"/>
                            <TextBlock Grid.Column="2" Grid.Row="0" HorizontalAlignment="Left" Text="{Binding Status}"/>
                            <TextBlock Grid.Column="3" Grid.Row="0" HorizontalAlignment="Center" Text="{Binding Path=Position, Converter={StaticResource PositionConverter}}"/>
                            <TextBlock Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right" Text="{Binding Path=LapsCompleted, Converter={StaticResource LapNumberConverter}}"/>
                        </Grid>
                        <Grid HorizontalAlignment="Stretch" Margin="0,6,0,0" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Text=""/>
                            <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" Text="Lap"/>
                            <TextBlock Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Text="Last"/>
                            <TextBlock Grid.Column="3" Grid.Row="0" HorizontalAlignment="Right" Text="Best"/>                            
                            <TextBlock Grid.Column="4" Grid.Row="0" HorizontalAlignment="Right" Text=""/>
                            <TextBlock Grid.Column="5" Grid.Row="0" HorizontalAlignment="Right" Text="PB"/>
                            <TextBlock Grid.Column="6" Grid.Row="0" HorizontalAlignment="Right" Text="SB"/>
                            <TextBlock Grid.Column="0" Grid.Row="1" Text="S1"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S1.Current.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S1.Current.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S1.Previous.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S1.Previous.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="3" Grid.Row="1" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S1.Minimum.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S1.Minimum.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="4" Grid.Row="1" HorizontalAlignment="Left" Margin="6,0,0,0" Text="{Binding Path=SectorTimes.S1.Minimum.Lap, Converter={StaticResource LapNumberConverter}}"/>
                            <TextBlock Grid.Column="5" Grid.Row="1" HorizontalAlignment="Right" Text="{Binding Path=SectorTimes.S1.PersonalBestCount}"/>
                            <TextBlock Grid.Column="6" Grid.Row="1" HorizontalAlignment="Right" Text="{Binding Path=SectorTimes.S1.SessionBestCount}"/>
                            <TextBlock Grid.Column="0" Grid.Row="2" Text="S2"/>
                            <TextBlock Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S2.Current.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S2.Current.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="2" Grid.Row="2" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S2.Previous.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S2.Previous.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="3" Grid.Row="2" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S2.Minimum.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S2.Minimum.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="4" Grid.Row="2" HorizontalAlignment="Left" Margin="6,0,0,0" Text="{Binding Path=SectorTimes.S2.Minimum.Lap, Converter={StaticResource LapNumberConverter}}"/>
                            <TextBlock Grid.Column="5" Grid.Row="2" HorizontalAlignment="Right" Text="{Binding Path=SectorTimes.S2.PersonalBestCount}"/>
                            <TextBlock Grid.Column="6" Grid.Row="2" HorizontalAlignment="Right" Text="{Binding Path=SectorTimes.S2.SessionBestCount}"/>
                            <TextBlock Grid.Column="0" Grid.Row="3" Text="S3"/>
                            <TextBlock Grid.Column="1" Grid.Row="3" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S3.Current.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S3.Current.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="2" Grid.Row="3" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S3.Previous.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S3.Previous.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="3" Grid.Row="3" HorizontalAlignment="Right" Foreground="{Binding Path=SectorTimes.S3.Minimum.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=SectorTimes.S3.Minimum.Time, Converter={StaticResource SectorTimeConverter}}"/>
                            <TextBlock Grid.Column="4" Grid.Row="3" HorizontalAlignment="Left" Margin="6,0,0,0" Text="{Binding Path=SectorTimes.S3.Minimum.Lap, Converter={StaticResource LapNumberConverter}}"/>
                            <TextBlock Grid.Column="5" Grid.Row="3" HorizontalAlignment="Right" Text="{Binding Path=SectorTimes.S3.PersonalBestCount}"/>
                            <TextBlock Grid.Column="6" Grid.Row="3" HorizontalAlignment="Right" Text="{Binding Path=SectorTimes.S3.SessionBestCount}"/>
                            <TextBlock Grid.Column="0" Grid.Row="4" Text="Lap"/>
                            <TextBlock Grid.Column="1" Grid.Row="4" HorizontalAlignment="Right" Foreground="{Binding Path=LapTimes.Current.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=LapTimes.Current.Time, Converter={StaticResource LapTimeConverter}}"/>
                            <TextBlock Grid.Column="2" Grid.Row="4" HorizontalAlignment="Right" Foreground="{Binding Path=LapTimes.Previous.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=LapTimes.Previous.Time, Converter={StaticResource LapTimeConverter}}"/>
                            <TextBlock Grid.Column="3" Grid.Row="4" HorizontalAlignment="Right" Foreground="{Binding Path=LapTimes.Minimum.Type, Converter={StaticResource PostedTimeTypeToColourConverter}}" Text="{Binding Path=LapTimes.Minimum.Time, Converter={StaticResource LapTimeConverter}}"/>
                            <TextBlock Grid.Column="4" Grid.Row="4" HorizontalAlignment="Left" Margin="6,0,0,0" Text="{Binding Path=LapTimes.Minimum.Lap, Converter={StaticResource LapNumberConverter}}"/>
                            <TextBlock Grid.Column="5" Grid.Row="4" HorizontalAlignment="Right" Text="{Binding Path=LapTimes.PersonalBestCount}"/>
                            <TextBlock Grid.Column="6" Grid.Row="4" HorizontalAlignment="Right" Text="{Binding Path=LapTimes.SessionBestCount}"/>
                        </Grid>
                    </StackPanel>
                </Border>
            </StackPanel>
            <StackPanel Width="307" HorizontalAlignment="left" Margin="3,0,0,0">
                <controls:DoubleCollectionModelControl DataContext="{Binding Session.Weather.AirTemperature}" StringFormat="{}{0:0.0}°C" Title="Air Temperature"/>
                <controls:DoubleCollectionModelControl DataContext="{Binding Session.Weather.TrackTemperature}" StringFormat="{}{0:0.0}°C" Title="Track Temperature"/>
                <controls:DoubleCollectionModelControl DataContext="{Binding Session.Weather.WindSpeed}" StringFormat="{}{0:0.00}m/s" Title="Wind Speed"/>
                <controls:DoubleCollectionModelControl DataContext="{Binding Session.Weather.WindAngle}" StringFormat="{}{0:#}°" Title="Wind Angle"/>
                <controls:DoubleCollectionModelControl DataContext="{Binding Session.Weather.Pressure}" StringFormat="{}{0:0.0}mb" Title="Pressure"/>
                <controls:DoubleCollectionModelControl DataContext="{Binding Session.Weather.Humidity}" StringFormat="{}{0:0}%" Title="Humidity"/>
                <Expander>
                    <Expander.Header>
                        <TextBlock Text="Debug"/>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid Margin="4,2,4,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>                                
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Type:"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Session.SessionType}"/>
                            <TextBlock Grid.Column="0" Grid.Row="1" Text="Lap No.:"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Session.RaceLapNumber}"/>
                            <TextBlock Grid.Column="0" Grid.Row="2" Text="Messages:"/>
                            <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding Session.Feed.MessageCount}"/>
                            <TextBlock Grid.Column="0" Grid.Row="3" Text="Sys Message:"/>
                            <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding Session.Messages.System}"/>
                            <TextBlock Grid.Column="0" Grid.Row="4" Text="Ping Interval:"/>
                            <TextBlock Grid.Column="1" Grid.Row="4" Text="{Binding Session.Feed.PingInterval}"/>
                            <TextBlock Grid.Column="0" Grid.Row="5" Text="Keyframe No.:"/>
                            <TextBlock Grid.Column="1" Grid.Row="5" Text="{Binding Session.Feed.KeyframeNumber}"/>
                        </Grid>
                    </Expander.Content>
                </Expander>
            </StackPanel>
        </StackPanel>
        <StackPanel Margin="0,6,0,0" Orientation="Horizontal">
            <Button Command="{Binding WatchLiveCommand}">Watch Live</Button>
            <Button Command="{Binding StartPlaybackCommand}">Watch Playback</Button>
        </StackPanel>        
    </StackPanel>
</Window>